name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  # Langkah pertama: Validasi kode dengan ESLint
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint (continue on error)
        run: npm run lint || echo "Linting issues found but continuing deployment"
        # Ini akan menjalankan lint tetapi tetap melanjutkan meskipun ada warning

  # Langkah kedua: Deploy ke Vercel (hanya dilakukan jika validate berhasil)
  deploy:
    needs: validate
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Prepare CV folder
        run: |
          mkdir -p private/assets
          echo "Creating placeholder for CV file"
          touch private/assets/.gitkeep

      # Menggunakan Vercel CLI untuk deployment (lebih handal)
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel Production
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          echo "Deploying to Vercel Production..."
          vercel --token ${VERCEL_TOKEN} --prod --confirm
